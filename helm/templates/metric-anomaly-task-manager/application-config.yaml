{{- if (eq .Values.deploymentType "individual") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.individual.metricAnomalyTaskManagerConfig.name }}
  labels:
    release: {{ .Release.Name }}
data:
  application.conf: |-
    queue.config {
      kafka {
        bootstrap.servers = {{ .Values.individual.metricAnomalyTaskManagerConfig.queueConfig.bootstrapServers  | quote }}
        producer {
          schema.registry.url = {{ .Values.individual.metricAnomalyTaskManagerConfig.queueConfig.schemaRegistryUrl  | quote }}
          key.serializer = {{ .Values.individual.metricAnomalyTaskManagerConfig.queueConfig.producer.keySerializer  | quote }}
          value.serializer = {{ .Values.individual.metricAnomalyTaskManagerConfig.queueConfig.producer.valueSerializer  | quote }}
        }
      }
    }

    alertRuleSource {
      type =  {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.type  | quote }}
      {{- if eq "fs" .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.type }}
      fs {
        path = {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.fs.path | quote }}
      }
      {{- else }}
      dataStore {
      {{- if .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.resourceName }}
        resourceName = {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.resourceName | quote }}
      {{- end }}
      {{- if .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.resourceNamespace }}
        resourceNamespace = {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.resourceNamespace | quote }}
      {{- end }}
        config.service {
        {{- if .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.config.service.host }}
          host = {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.config.service.host | quote }}
        {{- end }}
        {{- if .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.config.service.port }}
          port = {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.config.service.port | quote }}
        {{- end }}
        }
        {{- if .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.tenantIds }}
        tenantIds = {{ .Values.individual.metricAnomalyTaskManagerConfig.alertRuleSource.dataStore.tenantIds }}
        {{- end }}
      }
      {{- end }}
    }
{{- end }}