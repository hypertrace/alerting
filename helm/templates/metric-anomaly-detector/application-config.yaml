{{- if (eq .Values.deploymentType "individual") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.individual.metricAnomalyDetectorConfig.name }}
  labels:
    release: {{ .Release.Name }}
data:
  application.conf: |-
    query.service.config = {
      host = {{ .Values.individual.metricAnomalyDetectorConfig.queryService.host }}
      port = {{ .Values.individual.metricAnomalyDetectorConfig.queryService.port }}
    }

    attributes.service.config = {
      host = {{ .Values.individual.metricAnomalyDetectorConfig.attributeService.host }}
      port = {{ .Values.individual.metricAnomalyDetectorConfig.attributeService.port }}
    }

    queue.config {
      kafka = {
        bootstrap.servers = {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.bootstrapServers }}
        consumer {
          schema.registry.url = {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.schemaRegistryUrl }}
          key.deserializer= {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.consumer.keyDeserializer }}
          value.deserializer= {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.consumer.valueDeserializer }}
        }
        producer {
          schema.registry.url = {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.schemaRegistryUrl }}
          key.serializer= {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.producer.keySerializer }}
          value.serializer= {{ .Values.individual.metricAnomalyDetectorConfig.queueConfig.producer.valueSerializer }}
        }
      }
    }
{{- end }}